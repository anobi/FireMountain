#version 460

layout (local_size_x = 16, local_size_y = 16) in;
layout (rgba16f, set = 0, binding = 0) uniform image2D image;
layout (push_constant) uniform constants {
    vec4 data_1;
    vec4 data_2;
    vec4 data_3;
    vec4 data_4;
} push_constants;

vec4 debanding(vec4 col, ivec2 uv)
{
    float noise_scale = 0.003173828125;
    float rand = fract(sin(dot(uv.xy, vec2(12.9898, 78.233))) * 43758.5453);
    return clamp(col + rand * noise_scale - noise_scale / 2.0, 0.0, 1.0);
}

void main() {
    ivec2 texel_coord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(image);
    vec4 top_color = push_constants.data_1;
    vec4 bottom_color = push_constants.data_2;

    if(texel_coord.x < size.x && texel_coord.y < size.y) {
        float blend = float(texel_coord.y) / size.y;

        vec4 out_color = mix(top_color, bottom_color, blend);

        // Add some noise to create texture
        // This looks terrible, why?
        // out_color += 0.015 * fract(sin(dot(texel_coord, vec2(12.9898, 78.233))) * 43758.5453);

        // Tonemapping and debanding
        out_color = 1.0f - exp(-out_color);
        out_color = debanding(out_color, texel_coord);

        imageStore(image, texel_coord, out_color);
    }
}